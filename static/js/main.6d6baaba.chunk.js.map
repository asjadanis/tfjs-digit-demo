{"version":3,"sources":["reducers/index.js","store/configureStore.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/Layout/index.js","components/Layout/Layout.js","components/Canvas/index.js","components/Canvas/canvas.js","modules/predict.js","components/DigitCard/index.js","components/DigitCard/DigitCard.js","routes/routes.js","pages/Home/HomePage.js","components/RouteProgress/RouteProgress.js","App.js","serviceWorker.js","index.js"],"names":["rootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","basename","Header","props","className","Footer","prosp","target","href","Layout","children","DigitCanvas","canvasRef","useRef","useState","canvasContext","setCanvasContext","isMouseDown","setMouseDown","x","y","lastPos","setLastPos","onMouseDown","e","getMousePosition","mouseX","mouseY","el","document","getElementsByClassName","style","overflowY","draw","onMouseMove","onMouseUp","current","boundingRect","getBoundingClientRect","clientX","left","clientY","top","touches","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","useEffect","getContext","onTouchStart","onTouchEnd","onTouchMove","ref","width","height","marginRight","onClick","dataString","predictDigit","tf","fromPixels","resizeNearestNeighbor","mean","expandDims","toFloat","div","clearRect","canvas","DigitCard","digit","routes","title","path","exact","component","mnistModel","setMnistModel","predictedResult","setPredictedResult","data","a","predict","predictedDigit","indexOf","Math","max","process","model","loadModel","minWidth","RouteProgress","nprogress","start","done","App","map","route","index","key","Boolean","window","location","hostname","match","store","initialState","middlewares","thunk","routerMiddleware","createStore","applyMiddleware","configureStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d6baaba.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst rootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n  });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { logger } from \"redux-logger\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport rootReducer from \"../reducers\";\n\nexport const history = createBrowserHistory({ basename: \"tfjs-digit-demo\" });\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [thunk, routerMiddleware(history)];\n  if (process.env.NODE_ENV !== \"production\") {\n    middlewares.push(logger);\n    return createStore(\n      rootReducer(history),\n      initialState,\n      composeWithDevTools(applyMiddleware(...middlewares))\n    );\n  } else {\n    return createStore(rootReducer(history), initialState, applyMiddleware(...middlewares));\n  }\n}\n","import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\nimport \"./header.css\";\n\nconst Header = (props) => <div className=\"header-container\">TF-JS Digit Recognition</div>;\n\nexport default Header;\n","import Footer from \"./Footer\";\nexport default Footer;\n","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = (prosp) => (\n  <div className=\"footer-container\">\n    <div className=\"footer-content\">\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/asjadanis/tfjs-digit-demo\"\n        className=\"link-styles\"\n      >\n        Github\n      </a>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => (\n  <div className=\"layout-container\">\n    <Header />\n    <div className=\"layout-content\">{children}</div>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import DigitCanvas from \"./canvas\";\nexport default DigitCanvas;","import React, { useRef, useState, useEffect } from \"react\";\nimport { processCanvasData } from \"../../modules/predict\";\nimport \"./canvas.css\";\n\nconst DigitCanvas = (props) => {\n  const canvasRef = useRef(null);\n  const [canvasContext, setCanvasContext] = useState(null);\n  const [isMouseDown, setMouseDown] = useState(false);\n  const [lastPos, setLastPos] = useState({ x: null, y: null });\n\n  const onMouseDown = (e) => {\n    const { mouseX, mouseY } = getMousePosition(e);\n    const el = document.getElementsByClassName(\"layout-content\");\n    if (el && el[0]) {\n      el[0].style.overflowY = \"hidden\";\n    }\n    setMouseDown(true);\n    draw(mouseX, mouseY);\n  };\n\n  const onMouseMove = (e) => {\n    if (isMouseDown) {\n      const { mouseX, mouseY } = getMousePosition(e);\n      draw(mouseX, mouseY);\n    }\n  };\n\n  const onMouseUp = (e) => {\n    setMouseDown(false);\n    const el = document.getElementsByClassName(\"layout-content\");\n    if (el && el[0]) {\n      el[0].style.overflowY = \"scroll\";\n    }\n  };\n\n  const getMousePosition = (e) => {\n    let mouseX = null;\n    let mouseY = null;\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      mouseX = e.clientX - boundingRect.left;\n      mouseY = e.clientY - boundingRect.top;\n      if (e.touches) {\n        mouseX = e.touches[0].clientX - boundingRect.left;\n        mouseY = e.touches[0].clientY - boundingRect.top;\n      }\n    }\n    return {\n      mouseX: mouseX,\n      mouseY: mouseY\n    };\n  };\n\n  const draw = (x, y) => {\n    if (isMouseDown) {\n      canvasContext.strokeStyle = \"white\";\n      canvasContext.lineWidth = 10;\n      canvasContext.lineJoin = \"round\";\n      canvasContext.beginPath();\n      canvasContext.moveTo(lastPos.x, lastPos.y);\n      canvasContext.lineTo(x, y);\n      canvasContext.closePath();\n      canvasContext.stroke();\n    }\n    setLastPos({ x, y });\n  };\n\n  const clearCanvas = (e) => {\n    canvasContext.clearRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n    setMouseDown(false);\n    setLastPos({ x: null, y: null });\n  };\n\n  const onPredict = (e) => {\n    const { predictDigit } = props;\n    const processedImage = processCanvasData(canvasRef.current);\n    predictDigit(processedImage);\n  };\n\n  useEffect(() => {\n    if (canvasRef) {\n      setCanvasContext(canvasRef.current.getContext(\"2d\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"canvas-container\">\n        <canvas\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n          onTouchStart={onMouseDown}\n          onTouchEnd={onMouseUp}\n          onTouchMove={onMouseMove}\n          ref={canvasRef}\n          width={\"250px\"}\n          height={\"250px\"}\n          className=\"canvas-styles\"\n        ></canvas>\n      </div>\n      <div>\n        <button style={{ width: \"4rem\", marginRight: \"2rem\" }} onClick={onPredict}>\n          Predict\n        </button>\n        <button style={{ width: \"4rem\" }} onClick={clearCanvas}>\n          Clear\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default DigitCanvas;\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport const processCanvasData = (dataString) => {\n  const image = tf.browser.fromPixels(dataString);\n  const resizedImage = image.resizeNearestNeighbor([28, 28]);\n  const mean = resizedImage.mean(2);\n  const reshapedImage = mean.expandDims(2);\n  const expandedDimensions = reshapedImage.expandDims().toFloat();\n  const average = expandedDimensions.div(255.0);\n  return average;\n};\n","import DigitCard from \"./DigitCard\";\nexport default DigitCard;","import React from \"react\";\nimport \"./digitcard.css\";\n\nconst DigitCard = (props) => {\n  const { digit } = props;\n  return (\n    <div className=\"digit-container-styles\">\n      <div className=\"digit-card-styles\">\n        <div className=\"digit-inner-container\">\n          <span className=\"font-styles\">{digit}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DigitCard;\n","import HomePage from \"../pages/Home\";\n\nconst routes = [\n  { title: \"Home\", path: \"/\", exact: true, component: HomePage }\n];\n\nexport default routes;\n","import React, { useState, useEffect } from \"react\";\nimport DigitCanvas from \"../../components/Canvas\";\nimport DigitCard from \"../../components/DigitCard\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"./home.css\";\n\nconst HomePage = (props) => {\n  const [mnistModel, setMnistModel] = useState(null);\n  const [predictedResult, setPredictedResult] = useState(null);\n\n  const predictDigit = async (data) => {\n    const predictedResult = await mnistModel.predict(data).data();\n    const predictedDigit = predictedResult.indexOf(Math.max(...predictedResult));\n    setPredictedResult(predictedDigit);\n  };\n\n  useEffect(() => {\n    async function loadModel() {\n      const model = await tf.loadLayersModel(process.env.REACT_APP_MODEL_URL);\n      setMnistModel(model);\n    }\n    loadModel();\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"inner-container\">\n        <div style={{ width: \"50%\", minWidth: \"300px\" }}>\n          <DigitCanvas predictDigit={predictDigit} />\n        </div>\n        <div style={{ width: \"50%\", minWidth: \"300px\" }}>\n          <DigitCard digit={predictedResult} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport nprogress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\nimport \"./route-progress.css\";\n\nexport const RouteProgress = (props) => {\n  nprogress.start();\n\n  useEffect(() => {\n    nprogress.done();\n  }, []);\n\n  return <Route {...props} />;\n};\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport routes from \"./routes/routes.js\";\nimport \"./App.css\";\nimport { RouteProgress } from \"./components/RouteProgress/RouteProgress\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <div className=\"main-content\">\n          <Switch>\n            {routes.map((route, index) => (\n              <RouteProgress key={index} {...route} />\n            ))}\n          </Switch>\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport configureStore, { history } from \"./store/configureStore\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}